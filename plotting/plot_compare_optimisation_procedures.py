import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt
import mplhep
mplhep.set_style("CMS")
plt.rcParams["figure.figsize"] = (10,8)

import numpy as np

#grid_search = [0.1955, 1.342, 1.2993, 1.2459, 1.226, 1.2077, 1.0567, 0.8705, 0.5489, 0.436, 0.3819, 0.3294, 0.3054, 0.2752, 0.2649, 0.2459, 0.2218, 0.2119]
#new_approach = [0.19550323486328125, 1.343536376953125, 1.287078857421875, 1.213836669921875, 1.192474365234375, 1.161956787109375, 1.012420654296875, 0.875091552734375, 0.5451202392578125, 0.4344940185546875, 0.3856658935546875, 0.35152435302734375, 0.32176971435546875, 0.28285980224609375, 0.26607513427734375, 0.24814605712890625, 0.23479461669921875, 0.21190643310546875]
#fix bkg shape
#grid_search = [0.18,1.2505,1.2047,1.1452,1.1223,1.136,1.0109,0.8003,0.5451,0.4017,0.3607,0.318,0.2928,0.2726,0.2542,0.2386,0.2146,0.1963]
#new_approach = [0.17995834350585938, 1.255035400390625, 1.184844970703125, 1.122283935546875, 1.093292236328125, 1.099395751953125, 0.986480712890625, 0.804901123046875, 0.5466461181640625, 0.4009246826171875, 0.35915374755859375, 0.32901763916015625, 0.30727386474609375, 0.27942657470703125, 0.26226043701171875, 0.23860931396484375, 0.22258758544921875, 0.19893646240234375]
#no neg weights
#grid_search = [0.167, 1.1208, 1.1665, 1.136, 1.0918, 1.0063, 0.872, 0.6283, 0.4185, 0.3546, 0.2962, 0.2588, 0.2405, 0.2256, 0.2096, 0.1986, 0.1863, 0.1756]
#new_approach = [0.16698837280273438, 1.113128662109375, 1.151275634765625, 1.146697998046875, 1.081085205078125, 0.988006591796875, 0.862884521484375, 0.6237030029296875, 0.4177093505859375, 0.35419464111328125, 0.29621124267578125, 0.25882720947265625, 0.24051666259765625, 0.22563934326171875, 0.20961761474609375, 0.19855499267578125, 0.18625259399414062, 0.17557144165039062]

grid1 = [0.167, 1.2337, 1.2962, 1.2566, 1.1513, 1.0979, 0.9315, 0.6596, 0.4253, 0.3656, 0.3008, 0.2607, 0.242, 0.2272, 0.21, 0.1989, 0.1863, 0.1756]
grid2 = [0.167, 1.1314, 1.1925, 1.1665, 1.107, 1.0338, 0.8781, 0.6321, 0.4192, 0.3561, 0.297, 0.2588, 0.2405, 0.226, 0.2096, 0.1986, 0.1863, 0.1756]
grid3 = [0.167, 1.1208, 1.1665, 1.136, 1.0918, 1.0063, 0.8659, 0.6283, 0.4185, 0.3546, 0.2962, 0.2588, 0.2405, 0.2256, 0.2096, 0.1986, 0.1863, 0.1756]
grid4 = [0.167, 1.1131, 1.1589, 1.1345, 1.0857, 1.0017, 0.8629, 0.6252, 0.4185, 0.3542, 0.2962, 0.2588, 0.2405, 0.2256, 0.2096, 0.1986, 0.1863, 0.1756]
new_approach = [0.16698837280273438, 1.113128662109375, 1.151275634765625, 1.146697998046875, 1.081085205078125, 0.988006591796875, 0.862884521484375, 0.6237030029296875, 0.4177093505859375, 0.35419464111328125, 0.29621124267578125, 0.25882720947265625, 0.24051666259765625, 0.22563934326171875, 0.20961761474609375, 0.19855499267578125, 0.18625259399414062, 0.17557144165039062]

masses = [260,270,280,290,300,320,350,400,450,500,550,600,650,700,750,800,900,1000]
grid1 = grid1[1:] + [grid1[0]]
grid2 = grid2[1:] + [grid2[0]]
grid3 = grid3[1:] + [grid3[0]]
grid4 = grid4[1:] + [grid4[0]]
new_approach = new_approach[1:] + [new_approach[0]]

grid2, grid3, grid4, new_approach = np.array(grid2), np.array(grid3), np.array(grid4), np.array(new_approach)

for i in range(len(masses)):
  plt.plot([2,3,4], 100*np.diff([grid1[i], grid2[i], grid3[i], grid4[i]])/grid2[i], label=str(masses[i]))
plt.legend(ncol=3)
plt.xlabel("N categories")
plt.ylabel("Limit improvement in %")
plt.savefig("Limit_vs_ncat.png")
plt.clf()

f, axs = plt.subplots(2, sharex=True, gridspec_kw={'height_ratios': [3, 1]})

axs[0].plot(masses, grid4, label="Grid search")
axs[0].plot(masses, new_approach, label="New approach")
axs[0].legend()
axs[0].set_ylabel("Approximate 95% CL limit")
axs[1].plot(masses, grid4/new_approach)
axs[1].set_ylabel("Grid / new")
axs[1].set_xlabel(r"$m_X$")
f.savefig("compare_optimisation_procedures.pdf")